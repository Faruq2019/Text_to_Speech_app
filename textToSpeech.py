# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'TextToSpeech.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from gtts import gTTS
import random


class Ui_TextToScreen(object):
    
    def alertBox(self, title, message):
        alertMessage = QtWidgets.QMessageBox()
        alertMessage.setWindowTitle(title)
        alertMessage.setText(message)
        alertMessage.setStandardButtons(QtWidgets.QMessageBox.Ok)
        alertMessage.exec_()

    def textToSpeech(self):
        userText = str(self.textArea.toPlainText())

        if len(userText) == 0:
            self.alertBox('Blank', 'Kindly enter or paste a text into the text area')
        else:
            language = "en"
            num = random.randrange(100, 999, 2)

            getFiveChar = userText[0:4]
            fileName = "output/" + str(num) + "-" + getFiveChar + ".mp3"
            file = gTTS(text = userText, lang = language, slow = False)
            saveFile = file.save(fileName)

            if saveFile != "" or saveFile != None:
                self.alertBox("Success", "Your audio file have been generate successfully, check output folder.")

            else: 
                self.alertBox("Error", 'Something went wrong!')
        

    def setupUi(self, TextToScreen):
        TextToScreen.setObjectName("TextToScreen")
        TextToScreen.resize(589, 447)
        TextToScreen.setStyleSheet("background-image: url(:/newPrefix/bg_image.jpg);\n"
"background-image: url(:/newPrefix/new_bg.jpg);\n"
"background-position: center bottom;\n"
"background-repeat: no-repeat;\n"
"background-attachment: fixed;\n"
"")
        self.centralwidget = QtWidgets.QWidget(TextToScreen)
        self.centralwidget.setObjectName("centralwidget")
        self.appTitlr = QtWidgets.QLabel(self.centralwidget)
        self.appTitlr.setGeometry(QtCore.QRect(170, 10, 291, 31))
        self.appTitlr.setStyleSheet("font-family: Calibri;\n"
"font-size: 28px;\n"
"font-weight: bold;\n"
"color: white;\n"
"background-image: url(none);")
        self.appTitlr.setObjectName("appTitlr")
        self.textLabel = QtWidgets.QLabel(self.centralwidget)
        self.textLabel.setGeometry(QtCore.QRect(60, 80, 221, 31))
        self.textLabel.setStyleSheet("font-family: Calibri;\n"
"font-size: 20px;\n"
"font-weight: bold;\n"
"color: white;\n"
"background-image: url(none);")
        self.textLabel.setObjectName("textLabel")
        self.textArea = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.textArea.setGeometry(QtCore.QRect(60, 130, 471, 191))
        self.textArea.setStyleSheet("font-family: Calibri;\n"
"padding: 8px;\n"
"color: Tomato;\n"
"font-size: 18px;\n"
"border: 2px solid white;\n"
"border-radius: 10px;\n"
"font-weight: \"600\";")
        self.textArea.setObjectName("textArea")
        self.convertButton = QtWidgets.QPushButton(self.centralwidget)
        self.convertButton.setGeometry(QtCore.QRect(360, 360, 171, 31))
        self.convertButton.setStyleSheet("background-image: url(none);\n"
"background-color: orange;\n"
"font-family: Calibri;\n"
"font-weight: bold;\n"
"font-size: 20px;\n"
"color: white;\n"
"border-radius: 10px;\n"
"")
        self.convertButton.setObjectName("convertButton")
        TextToScreen.setCentralWidget(self.centralwidget)
        self.convertButton.clicked.connect(self.textToSpeech)
        self.statusbar = QtWidgets.QStatusBar(TextToScreen)
        self.statusbar.setObjectName("statusbar")
        TextToScreen.setStatusBar(self.statusbar)

        self.retranslateUi(TextToScreen)
        QtCore.QMetaObject.connectSlotsByName(TextToScreen)

    def retranslateUi(self, TextToScreen):
        _translate = QtCore.QCoreApplication.translate
        TextToScreen.setWindowTitle(_translate("TextToScreen", "AppTitle"))
        self.appTitlr.setText(_translate("TextToScreen", "Text to Speech Converter"))
        self.textLabel.setText(_translate("TextToScreen", "Write or Paste your text :"))
        self.convertButton.setText(_translate("TextToScreen", "Convert to Audio"))
import source


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    TextToScreen = QtWidgets.QMainWindow()
    ui = Ui_TextToScreen()
    ui.setupUi(TextToScreen)
    TextToScreen.show()
    sys.exit(app.exec_())
